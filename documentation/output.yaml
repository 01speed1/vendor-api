openapi: 3.0.0
info:
  version: v1.0
  title: Vendor API Documentation
  description: Vendor API Documentation main API server service v1
  contact:
    name: Oscar Guzman
    email: oscar.guzman9501@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - description: LocalHost
    url: http://localhost:5000/api
  - description: EC2 Test instance
    url: http://3.84.108.148/api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Accounts
  - name: Categories
  - name: Consumers
  - name: Geo
  - name: Offers
  - name: Orders
  - name: Products
  - name: Subcategories
paths:
  /accounts/login:
    post:
      summary: Authenticate de user with his main account
      tags:
        - Accounts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: android@email.com
                password:
                  type: string
                  example: Superpa$$23
              required:
                - email
                - password
      responses:
        '200':
          description: Return new Authentication token
          content:
            application/json:
              example:
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"email" is required'
  /accounts/signup:
    post:
      summary: Register a new user
      tags:
        - Accounts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                identificationPhone:
                  type: string
                  example: '3005556677'
                validatePassword:
                  type: string
                  example: Superpa$$23
                firstName:
                  type: string
                  example: Pedro G.
                lastName:
                  type: string
                  example: Perez
                email:
                  type: string
                  example: android@email.com
                password:
                  type: string
                  example: Superpa$$23
              required:
                - identificationPhone
                - validatePassword
                - firstName
                - lastName
                - email
                - password
      responses:
        '200':
          description: Return message account created
          content:
            application/json:
              example:
                message: account created
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"email" is required'
  /categories:
    get:
      security:
        - bearerAuth: []
      summary: Get all categories
      tags:
        - Categories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              example:
                categories: []
    post:
      security:
        - bearerAuth: []
      summary: Create a category
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
                  example: A name category
      responses:
        '200':
          description: Category created
          content:
            application/json:
              example:
                message: Category created
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"name" is required'
  /consumers/orders:
    get:
      security:
        - bearerAuth: []
      summary: Endpoint to get all orders of logged user
      tags:
        - Consumers
      responses:
        '200':
          description: Return message cerated order
          content:
            application/json:
              example:
                orders:
                  - _id: 6058ff8403b45518108b0298
                    status: Zelma.Collins
                    products:
                      - 6058ff849191e918105e7060
                      - 6058ff849191e918105e7061
                    services:
                      - 6058ff849191e918105e7062
                      - 6058ff849191e918105e7063
                    createdAt: '2021-03-22T10:59:21.396Z'
                    modifiedAt: '2021-03-22T00:23:52.422Z'
                    location: Alexandre.Dach
                    consumerId: 6058ff8403b45518108b0292
                    destinyAddress: Jackeline.Von
                    deliverDetails: Cielo80
                    __v: 0
                  - _id: 6058ff8403b45518108b0299
                    status: Laverne7
                    products:
                      - 6058ff849191e918105e7065
                      - 6058ff849191e918105e7066
                      - 6058ff849191e918105e7067
                      - 6058ff849191e918105e7068
                      - 6058ff849191e918105e7069
                      - 6058ff849191e918105e706a
                    services:
                      - 6058ff849191e918105e706b
                      - 6058ff849191e918105e706c
                    createdAt: '2021-03-22T06:24:15.948Z'
                    modifiedAt: '2021-03-22T11:27:48.625Z'
                    location: Aisha.Buckridge17
                    consumerId: 6058ff8403b45518108b0292
                    destinyAddress: Alena_Leannon72
                    deliverDetails: Landen.Rohan52
                    __v: 0
  /geo:
    get:
      security:
        - bearerAuth: []
      summary: Endpoint to get geo coordinates
      tags:
        - Geo
      parameters:
        - name: address
          in: query
          description: address of place
          required: true
      responses:
        '200':
          description: Return coordinates
  /offers/:
    post:
      security:
        - bearerAuth: []
      summary: Endpoint to get all offers in the app
      tags:
        - Offers
      requestBody:
        content:
          application/json:
            schema:
              required:
                - businessId
                - orderId
                - productsOffered
                - servicesOffered
              properties:
                businessId:
                  type: string
                  example: 2435rrf345f43rf234t
                orderId:
                  type: string
                  example: 2435rrf345f43rf234t
                state:
                  type: string
                  example: pending
                productsOffered:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        example: 2435rrf345f43rf234t
                      quantity:
                        type: integer
                        example: 2
                      price:
                        type: integer
                        example: 20000
                servicesOffered:
                  type: array
                  items:
                    type: object
                    properties:
                      serviceId:
                        type: string
                        example: 2435rrf345f43rf234t
                      price:
                        type: integer
                        example: 20000
      responses:
        '200':
          description: Return all offers
          content:
            application/json:
              example:
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  /orders/:
    get:
      security:
        - bearerAuth: []
      summary: Endpoint to get create an order
      tags:
        - Orders
      responses:
        '200':
          description: Return the list of orders
    post:
      security:
        - bearerAuth: []
      summary: Endpoint to get all orders
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              required:
                - location
                - destinyAddress
                - products
                - services
              properties:
                location:
                  type: string
                  example: 34.324342 234.23423432
                destinyAddress:
                  type: string
                  example: Calle false 123
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        example: 2435rrf345f43rf234t
                      quantity:
                        type: integer
                        example: 2
                      price:
                        type: integer
                        example: 20000
                services:
                  type: array
                  items:
                    type: object
                    properties:
                      serviceId:
                        type: string
                        example: 2435rrf345f43rf234t
                      price:
                        type: integer
                        example: 20000
      responses:
        '200':
          description: Return message cerated order
          content:
            application/json:
              example:
                message: order created
  /subcategories/category/{categoryId}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          description: categoryId
          required: true
          schema:
            type: string
      summary: Get a subcategories by category
      tags:
        - Subcategories
      responses:
        '200':
          description: Get a subcategories by category
          content:
            application/json:
              example:
                subcategories: '[]'
  /subcategories:
    post:
      security:
        - bearerAuth: []
      summary: Create a subcategory
      tags:
        - Subcategories
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - categoryId
              properties:
                name:
                  type: string
                  example: A name category
                categoryId:
                  type: string
                  example: 606a76d7eeee6f0013b9c2f1
      responses:
        '200':
          description: Subcategory created
          content:
            application/json:
              example:
                message: Subcategory created
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"name" is required'
