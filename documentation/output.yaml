openapi: 3.0.0
info:
  version: v1.0
  title: Vendor API Documentation
  description: Vendor API Documentation main API server service v1
  contact:
    name: Oscar Guzman
    email: oscar.guzman9501@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - description: LocalHost
    url: http://localhost:5000/api
  - description: EC2 Test instance
    url: http://3.84.108.148/api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    multiBuy:
      required:
        - businessId
        - products
        - type
        - hoursLeft
      properties:
        businessId:
          type: string
          example: 2435rrf345f43rf234t
        hoursLeft:
          type: integer
          example: 8
        products:
          type: array
          items:
            type: object
            properties:
              quantity:
                type: integer
                example: 2
              price:
                type: integer
                example: 20000
        services:
          type: array
          items:
            type: object
            properties:
              price:
                type: integer
                example: 20000
        type:
          type: object
          required:
            - name
            - multiBuy
          properties:
            name:
              type: string
              example: multiBuy
            multiBuy:
              type: object
              required:
                - min
                - get
              properties:
                min:
                  type: integer
                  example: 1
                get:
                  type: integer
                  example: 2
    discountRate:
      required:
        - businessId
        - products
        - type
        - hoursLeft
      properties:
        businessId:
          type: string
          example: 2435rrf345f43rf234t
        hoursLeft:
          type: integer
          example: 8
        products:
          type: array
          items:
            type: object
            properties:
              quantity:
                type: integer
                example: 2
              price:
                type: integer
                example: 20000
        services:
          type: array
          items:
            type: object
            properties:
              price:
                type: integer
                example: 20000
        type:
          type: object
          required:
            - name
            - discountRate
          properties:
            name:
              type: string
              example: discountRate
            discountRate:
              type: integer
              example: 20
    discountPrice:
      required:
        - businessId
        - products
        - type
        - hoursLeft
      properties:
        businessId:
          type: string
          example: 2435rrf345f43rf234t
        hoursLeft:
          type: integer
          example: 8
        products:
          type: array
          items:
            type: object
            properties:
              quantity:
                type: integer
                example: 2
              price:
                type: integer
                example: 20000
        services:
          type: array
          items:
            type: object
            properties:
              price:
                type: integer
                example: 20000
        type:
          type: object
          required:
            - name
            - discountPrice
          properties:
            name:
              type: string
              example: discountPrice
            discountPrice:
              type: integer
              example: 20000
    freeProduct:
      required:
        - businessId
        - products
        - type
        - hoursLeft
      properties:
        businessId:
          type: string
          example: 2435rrf345f43rf234t
        hoursLeft:
          type: integer
          example: 8
        products:
          type: array
          items:
            type: object
            properties:
              quantity:
                type: integer
                example: 2
              price:
                type: integer
                example: 20000
        services:
          type: array
          items:
            type: object
            properties:
              price:
                type: integer
                example: 20000
        type:
          type: object
          required:
            - name
            - freeProduct
          properties:
            name:
              type: string
              example: freeProduct
            freeProduct:
              type: object
              properties:
                name:
                  type: string
                  example: Product free name
                quantity:
                  type: integer
                  example: 2
tags:
  - name: Accounts
  - name: Categories
  - name: Consumers
  - name: Geo
  - name: Offers
  - name: Orders
  - name: Products
  - name: Promos
  - name: Subcategories
paths:
  /accounts/login:
    post:
      summary: Authenticate de user with his main account
      tags:
        - Accounts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: android@email.com
                password:
                  type: string
                  example: Superpa$$23
              required:
                - email
                - password
      responses:
        '200':
          description: Return new Authentication token
          content:
            application/json:
              example:
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"email" is required'
  /accounts/signup:
    post:
      summary: Register a new user
      tags:
        - Accounts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                identificationPhone:
                  type: string
                  example: '3005556677'
                validatePassword:
                  type: string
                  example: Superpa$$23
                firstName:
                  type: string
                  example: Pedro G.
                lastName:
                  type: string
                  example: Perez
                email:
                  type: string
                  example: android@email.com
                password:
                  type: string
                  example: Superpa$$23
              required:
                - identificationPhone
                - validatePassword
                - firstName
                - lastName
                - email
                - password
      responses:
        '200':
          description: Return message account created
          content:
            application/json:
              example:
                message: account created
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"email" is required'
  /categories:
    get:
      security:
        - bearerAuth: []
      summary: Get all categories
      tags:
        - Categories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              example:
                categories: []
    post:
      security:
        - bearerAuth: []
      summary: Create a category
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
                  example: A name category
      responses:
        '200':
          description: Category created
          content:
            application/json:
              example:
                message: Category created
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"name" is required'
  /consumers/orders:
    get:
      security:
        - bearerAuth: []
      summary: Endpoint to get all orders of logged user
      tags:
        - Consumers
      responses:
        '200':
          description: Return message cerated order
          content:
            application/json:
              example:
                orders:
                  - _id: 6058ff8403b45518108b0298
                    status: Zelma.Collins
                    products:
                      - 6058ff849191e918105e7060
                      - 6058ff849191e918105e7061
                    services:
                      - 6058ff849191e918105e7062
                      - 6058ff849191e918105e7063
                    createdAt: '2021-03-22T10:59:21.396Z'
                    modifiedAt: '2021-03-22T00:23:52.422Z'
                    location: Alexandre.Dach
                    consumerId: 6058ff8403b45518108b0292
                    destinyAddress: Jackeline.Von
                    deliverDetails: Cielo80
                    __v: 0
                  - _id: 6058ff8403b45518108b0299
                    status: Laverne7
                    products:
                      - 6058ff849191e918105e7065
                      - 6058ff849191e918105e7066
                      - 6058ff849191e918105e7067
                      - 6058ff849191e918105e7068
                      - 6058ff849191e918105e7069
                      - 6058ff849191e918105e706a
                    services:
                      - 6058ff849191e918105e706b
                      - 6058ff849191e918105e706c
                    createdAt: '2021-03-22T06:24:15.948Z'
                    modifiedAt: '2021-03-22T11:27:48.625Z'
                    location: Aisha.Buckridge17
                    consumerId: 6058ff8403b45518108b0292
                    destinyAddress: Alena_Leannon72
                    deliverDetails: Landen.Rohan52
                    __v: 0
  /consumers/orders/{orderId}:
    get:
      security:
        - bearerAuth: []
      summary: Endpoint to get an order of logged user
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          schema:
            type: string
      tags:
        - Consumers
      responses:
        '200':
          description: Return found order
          content:
            application/json:
              example:
                order:
                  _id: 608cc303a62588b141b41776
                  status: Rebecca_Ryan
                  products:
                    - _id: 608cc303a62588b141b41774
                      quantity: 72
                      createdAt: '2021-04-30T14:11:21.709Z'
                      modifiedAt: '2021-04-30T20:50:50.484Z'
                      name: Shaun_Jaskolski36
                      price: 21
                      subcategory: 608cc3034e2aceb1415dbc4d
                      __v: 0
                    - _id: 608cc303a62588b141b41775
                      quantity: 70
                      createdAt: '2021-04-30T13:06:40.339Z'
                      modifiedAt: '2021-04-30T22:29:08.296Z'
                      name: Sydni87
                      price: 26
                      subcategory: 608cc3034e2aceb1415dbc4e
                      __v: 0
                  services: []
                  createdAt: '2021-05-01T00:26:52.840Z'
                  modifiedAt: '2021-04-30T07:12:44.330Z'
                  location: Lesley24
                  consumerId: 608cc303a62588b141b41771
                  destinyAddress: Kaitlyn_VonRueden34
                  deliverDetails: Myah_Dooley
                  __v: 0
  /geo:
    get:
      security:
        - bearerAuth: []
      summary: Endpoint to get geo coordinates or address
      tags:
        - Geo
      parameters:
        - name: address
          in: query
          schema:
            type: string
          description: address of place
          required: false
        - name: country
          in: query
          description: country
          schema:
            type: string
          required: false
        - name: zipcode
          in: query
          description: zipcode
          schema:
            type: string
          required: false
        - name: lat
          in: query
          description: latitude
          schema:
            type: number
          required: false
        - name: lon
          in: query
          description: longitude
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Return coordinates or address
          content:
            application/json:
              example:
                addresses:
                  - formattedAddress: 'Cl. 152 #9-93, Bogotá, Colombia'
                    latitude: 4.730390499999999
                    longitude: -74.03485479999999
                    extra:
                      googlePlaceId: ChIJlztCWWGFP44RDFhDZaDyFNM
                      confidence: 1
                      premise: null
                      subpremise: null
                      neighborhood: Usaquén
                      establishment: null
                    administrativeLevels:
                      level1long: Bogotá
                      level1short: Bogotá
                    streetNumber: 9-93
                    streetName: Calle 152
                    city: Bogotá
                    country: Colombia
                    countryCode: CO
                    zipcode: '110131'
                    provider: google
  /offers:
    get:
      summary: Endpoint to get all offers in the app
      tags:
        - Offers
      responses:
        '200':
          description: Return all offers created
          content:
            application/json:
              example:
                offers:
                  - _id: 60a4058bdb53ca0388f20367
                    state: pending
                    createdAt: '2021-05-18T15:47:04.381Z'
                    modifiedAt: '2021-05-18T08:14:38.819Z'
                    orderId: 60a4058b1c2dea038827b839
                    businessId: 60a4058b1c2dea038827b838
                    __v: 0
                  - _id: 60a4058bdb53ca0388f20368
                    state: pending
                    createdAt: '2021-05-18T05:20:49.366Z'
                    modifiedAt: '2021-05-18T00:20:24.026Z'
                    orderId: 60a4058b1c2dea038827b83b
                    businessId: 60a4058b1c2dea038827b83a
                    __v: 0
    post:
      security:
        - bearerAuth: []
      summary: Endpoint to create an offer in the app
      tags:
        - Offers
      requestBody:
        content:
          application/json:
            schema:
              required:
                - businessId
                - orderId
                - productsOffered
                - servicesOffered
              properties:
                businessId:
                  type: string
                  example: 2435rrf345f43rf234t
                orderId:
                  type: string
                  example: 2435rrf345f43rf234t
                productsOffered:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        example: 2435rrf345f43rf234t
                      quantity:
                        type: integer
                        example: 2
                      price:
                        type: integer
                        example: 20000
                servicesOffered:
                  type: array
                  items:
                    type: object
                    properties:
                      serviceId:
                        type: string
                        example: 2435rrf345f43rf234t
                      price:
                        type: integer
                        example: 20000
      responses:
        '200':
          description: Return message offer created
          content:
            application/json:
              example:
                message: Offer Created
  /orders:
    get:
      security:
        - bearerAuth: []
      summary: Endpoint to get all orders
      tags:
        - Orders
      responses:
        '200':
          description: Return the list of orders
          content:
            application/json:
              example:
                orders:
                  - _id: 609ca15403b442018f735d67
                    status: pending
                    products:
                      - 609ca15403b442018f735d66
                    services: []
                    createdAt: '2021-05-13T03:46:36.248Z'
                    modifiedAt: '2021-05-13T03:46:36.248Z'
                    consumerId: 609c98e5234dca002bfd4171
                    location:
                      lat: 40.82223286
                      lon: -96.7982002
                    destinyAddress:
                      address: Cra89A
                      neighborhood: Los cerezos
                      apartament: 306
                      additionalDescription: Casa verde esquinera
                    __v: 0
                  - _id: 609ca1be03b442018f735d6a
                    status: pending
                    products:
                      - 609ca1be03b442018f735d68
                    services:
                      - 609ca1be03b442018f735d69
                    createdAt: '2021-05-13T03:46:36.248Z'
                    modifiedAt: '2021-05-13T03:46:36.248Z'
                    consumerId: 609c98e5234dca002bfd4171
                    location:
                      lat: 40.82223286
                      lon: -96.7982002
                    destinyAddress:
                      address: Cra89A
                      neighborhood: Los cerezos
                      apartament: 306
                      additionalDescription: Casa verde esquinera
                    __v: 0
    post:
      security:
        - bearerAuth: []
      summary: Endpoint to get create an order
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              required:
                - location
                - destinyAddress
                - products
                - services
              properties:
                location:
                  type: object
                  properties:
                    lat:
                      type: string
                      example: '34.324342'
                    lon:
                      type: string
                      example: '234.23423432'
                destinyAddress:
                  type: object
                  properties:
                    address:
                      type: string
                      example: calle 9
                    neighborhood:
                      type: string
                      example: Las Delicias
                    apartament:
                      type: number
                      example: 306
                    additionalDescription:
                      type: string
                      example: Casa con una tienda
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      subcategoryId:
                        type: string
                        example: 2435rrf345f43rf234t
                      quantity:
                        type: integer
                        example: 2
                      price:
                        type: integer
                        example: 20000
                services:
                  type: array
                  items:
                    type: object
                    properties:
                      subcategoryId:
                        type: string
                        example: 2435rrf345f43rf234t
                      price:
                        type: integer
                        example: 20000
      responses:
        '200':
          description: Return message created order
          content:
            application/json:
              example:
                message: Order created
  /promos:
    get:
      summary: Endpoint to get promos
      tags:
        - Promos
      responses:
        '200':
          description: the list of promos
          content:
            application/json:
              example:
                promos:
                  _id: 60a2d7b954f96300131cc65a
                  type:
                    multiBuy:
                      min: 12
                      get: 11
                    name: Destiney_Borer
                    freeProduct: 60a2d7b94afb730013db1336
                    discountRate: 38
                    discountPrice: 21
                  status: Kacie_Treutel91
                  products:
                    - _id: 60a2d7b954f96300131cc659
                      quantity: 76
                      createdAt: '2021-05-17T05:35:53.114Z'
                      modifiedAt: '2021-05-17T08:54:07.530Z'
                      name: Orion_Hermiston37
                      price: 63
                      subcategoryId: 60a2d7b94afb730013db132c
                      __v: 0
                  services: []
                  createdAt: '2021-05-16T22:42:47.846Z'
                  modifiedAt: '2021-05-17T04:15:56.683Z'
                  hoursLeft: 18
                  businessId: 60a2d7b94afb730013db132d
                  __v: 0
    post:
      security:
        - bearerAuth: []
      summary: Endpoint to create a promo
      tags:
        - Promos
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/multiBuy'
                - $ref: '#/components/schemas/discountRate'
                - $ref: '#/components/schemas/discountPrice'
                - $ref: '#/components/schemas/freeProduct'
      responses:
        '200':
          description: Return all offers
          content:
            application/json:
              example:
                message: Promo created
  /subcategories/category/{categoryId}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          description: categoryId
          required: true
          schema:
            type: string
      summary: Get a subcategories by category
      tags:
        - Subcategories
      responses:
        '200':
          description: Get a subcategories by category
          content:
            application/json:
              example:
                subcategories: '[]'
  /subcategories:
    post:
      security:
        - bearerAuth: []
      summary: Create a subcategory
      tags:
        - Subcategories
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - categoryId
              properties:
                name:
                  type: string
                  example: A name category
                categoryId:
                  type: string
                  example: 606a76d7eeee6f0013b9c2f1
      responses:
        '200':
          description: Subcategory created
          content:
            application/json:
              example:
                message: Subcategory created
        '400':
          description: Required param
          content:
            application/json:
              example:
                error: '"name" is required'
